<project name="script-subtitlealignment" default="create-jar" basedir=".">
  
  <property name="src.dir" location="src"/>
  <property name="build.dir" location="build"/>
  <property name="lib.dir" location="lib" />
  <property name="archive.filename" value="ssa" />
  <property name="jar.filename" value="${archive.filename}.jar" />
  <property name="log4j.filename" value="log4j.properties" />
  
  <path id="project.classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
      <include name="/usr/share/java/stanford-corenlp-3.2.0.jar" />
      <include name="/usr/share/java/microsoft-translator-java-api-0.6.2-jar-with-dependencies.jar" />
      <include name="/usr/share/java/joda-time.jar" />
      <include name="/usr/share/java/apache-commons-lang.jar" />
      <include name="/usr/share/java/apache-commons-io.jar" />
    </fileset>
  </path>

  <manifestclasspath property="lib.list" jarfile="${archive.filename}.jar">
	   <classpath refid="project.classpath" />
  </manifestclasspath>
	
  <manifestclasspath property="properties.list" jarfile="${log4j.filename}">
	   <classpath refid="project.classpath" />
  </manifestclasspath>
  
  <target name="prepare" description="Creates necessary directories for the building process">
	<mkdir dir="${build.dir}"/>
  </target>
  
  <target name="clean" description="Removes any generated files">
	<delete dir="${build.dir}"/>
	<delete file="${jar.filename}"/>
  </target>
  
  <target name="compile" depends="prepare" description="Compiles the source code" >
	<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="project.classpath"
           source="1.7" target="1.7" debug="on" includeantruntime="false"/>
  </target>
	
  <target name="create-jar" depends="clean,compile" description="Generates the jar with the project classes">
	<jar destfile="${jar.filename}" basedir="${build.dir}">
		<!--fileset dir="." includes="resources/** results/** config/** lib/*"/-->
		<manifest>
			<attribute name="Main-Class" value="ist.ssa.SSA"/>
			<attribute name="Class-Path" value=". ${lib.list} ${properties.list}"/>
		</manifest>
  	</jar>
  </target>
  
  <!--    <property name="run.args" value="package.and.class.name arg1 arg2 arg3"/> -->
  <!--    <property name="target.classpath" value="target.jar"/> -->
	
  <target name="run" depends="create-jar" description="Runs the target program with Traits" >
	<!-- fail unless="run.args" message="arguments must be passed using ant option -Drun.args="/> -->
	<!-- fail unless="target.classpath" message="classpath for target program must be passed using ant option -Dtarget.classpath="/> -->
	<java classname="ist.ssa.SSA" fork="true">
	  <classpath>
		<path refid="project.classpath"/>
		<pathelement location="${jar.filename}"/>
		<pathelement path="${target.classpath}"/>
	  </classpath>		
	  <!-- arg line="${run.args}" /> -->
	</java>
  </target>
</project>
